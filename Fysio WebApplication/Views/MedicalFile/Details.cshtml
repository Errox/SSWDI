@model Library.core.Model.MedicalFile

@{
    ViewData["Title"] = "Detail";
}

<h1>Detail</h1>

<div>
    <h4>MedicalFile</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DiagnosisCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DiagnosisCode)
        </dd>
        <dt class="col-sm-2">
            Body Location
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(ViewBag.BodyLocation)
        </dd>
        <dt class="col-sm-2">
            Pathology
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(ViewBag.Pathology)
        </dd>
        @*Maybe in the future the therapist can be linked towards his viewable acocunt?*@
        <dt class="col-sm-2">
            Therapist
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IntakeTherapistId.ApplicationUser.FirstName) @Html.DisplayFor(model => model.IntakeTherapistId.ApplicationUser.SurName)
        </dd>
        <dt class="col-sm-2">
            Supervision
        </dt>
        @*Maybe in the future the Superivsion can be linked towards his viewable acocunt?*@
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IntakeSupervision.ApplicationUser.FirstName) @Html.DisplayFor(model => model.IntakeSupervision.ApplicationUser.SurName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfCreation)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfCreation)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfDischarge)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfDischarge)
        </dd>
        <dt class="col-sm-2">
            Notes
        </dt>
        <dd class="col-sm-10">
            @if(Model.Notes.Count() > 0){
                @Html.ActionLink("All Notes", "Notes", new { id = Model.Id })
            }
            @if (User.HasClaim("UserType", "Employee") || User.HasClaim("UserType", "Student"))
            {
                <b> | </b>
                @Html.ActionLink("Add Note", "NotesNew", new { id = Model.Id })
            }
        </dd>
        <dt class="col-sm-2">
            TreatmentPlan
        </dt>
        <dd class="col-sm-10">
            @if (Model.TreatmentPlans.Count() > 0)
            {
                @Html.ActionLink("All Treatmentplans", "Treatmentplan", new { id = Model.Id })
            }
            @if (User.HasClaim("UserType", "Employee") || User.HasClaim("UserType", "Student"))
            {
                <b> | </b>
                @Html.ActionLink("Add treatmentplan", "TreatmentplanNew", new { id = Model.Id })
            }
        </dd>
        <dt class="col-sm-2">
            Appointment
        </dt>
        <dd class="col-sm-10">
            @if (User.HasClaim("UserType", "Employee") || User.HasClaim("UserType", "Student"))
            {
                @Html.ActionLink("Details", "Appointment", new { id = Model.Id })
            }else{
                @Html.ActionLink("Afspraak maken", "Create", "Appointment")
            }
        </dd>
    </dl>
</div>
<div>
    @if (User.HasClaim("UserType", "Employee") || User.HasClaim("UserType", "Student"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
        <b> | </b>
        <a href="javascript:history.go(-1)">Back</a>
    }
    
</div>
