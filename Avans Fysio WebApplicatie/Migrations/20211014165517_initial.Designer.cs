// <auto-generated />
using System;
using Avans_Fysio_WebApplicatie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Avans_Fysio_WebApplicatie.Data.Migrations
{
    [DbContext(typeof(WebApplicationDbContext))]
    [Migration("20211014165517_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.MedicalFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfDischarge")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("DiagnosisCode")
                        .HasColumnType("int");

                    b.Property<int>("IntakeSupervision")
                        .HasColumnType("int");

                    b.Property<int>("IntakeTherapistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicalFiles");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedUtc")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("MedicalFileId")
                        .HasColumnType("int");

                    b.Property<bool>("OpenForPatient")
                        .HasColumnType("bit");

                    b.Property<int?>("TherapistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicalFileId");

                    b.HasIndex("TherapistId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("GenderString")
                        .HasColumnName("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdNumber")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImgData")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsStudent")
                        .HasColumnType("bit");

                    b.Property<int?>("MedicalFileId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("PatientId");

                    b.HasIndex("MedicalFileId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.PracticeRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("PracticeRooms");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Therapist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BigNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Therapist");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.TreatmentPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfTreatmentsPerWeek")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("MedicalFileId")
                        .HasColumnType("int");

                    b.Property<string>("Particularities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PracticeRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TreatmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TreatmentPerformedBy")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalFileId");

                    b.HasIndex("PracticeRoomId");

                    b.ToTable("TreatmentPlans");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Appointment", b =>
                {
                    b.HasOne("Avans_Fysio_WebApplicatie.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Note", b =>
                {
                    b.HasOne("Avans_Fysio_WebApplicatie.Models.MedicalFile", "MedicalFile")
                        .WithMany("Notes")
                        .HasForeignKey("MedicalFileId");

                    b.HasOne("Avans_Fysio_WebApplicatie.Models.Therapist", "Therapist")
                        .WithMany()
                        .HasForeignKey("TherapistId");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.Patient", b =>
                {
                    b.HasOne("Avans_Fysio_WebApplicatie.Models.MedicalFile", "MedicalFile")
                        .WithMany()
                        .HasForeignKey("MedicalFileId");
                });

            modelBuilder.Entity("Avans_Fysio_WebApplicatie.Models.TreatmentPlan", b =>
                {
                    b.HasOne("Avans_Fysio_WebApplicatie.Models.MedicalFile", null)
                        .WithMany("TreatmentPlans")
                        .HasForeignKey("MedicalFileId");

                    b.HasOne("Avans_Fysio_WebApplicatie.Models.PracticeRoom", "PracticeRoom")
                        .WithMany("TreatmentPlans")
                        .HasForeignKey("PracticeRoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
